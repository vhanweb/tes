@model POS.ViewModel.ItemsIventoryViewModel

@using (Html.BeginForm("MngInventory", "Items", null, FormMethod.Post, new { @id = "form-item" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })        

        <div class="box">
            <table class="table">
                <thead>
                    <tr>
                        <th>Variant Name</th>
                        <th>In Stock</th>
                        <th>Alert At</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="list-item-inventory"></tbody>
            </table>
        </div> 

        @*<div class="form-group">
            <div class="col-md-4">
                @Html.LabelFor(model => model.VariantName, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            @*<div class="col-md-2">
                @Html.Label("Track Stock")
            </div>*@
            @*<div class="col-md-4">
                @Html.LabelFor(model => model.Beginning, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>*@
            @*<div class="col-md-2">
                @Html.Label("Alert")
            </div>*@
            @*<div class="col-md-4">
                @Html.LabelFor(model => model.AlertAt, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>         
        </div>*@        

        @*<div class="form-inline" id="list-inventory">            
            <div class="col-md-4">
                @Html.EditorFor(model => model.VariantName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VariantName, "", new { @class = "text-danger" })
            </div>*@
            @*<div class="col-md-3">
                <button type="button" class="btn btn-primary"><i class="fa fa-check-circle"></i></button>
            </div>*@
            @*<div class="col-md-4">
                @Html.EditorFor(model => model.Beginning, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InStock, "", new { @class = "text-danger" })
            </div>*@

            @*<div class="col-md-3">
                <button type="button" class="btn btn-primary"><i class="fa fa-check-circle"></i></button>
            </div>*@
            @*<div class="col-md-4">
                @Html.EditorFor(model => model.AlertAt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AlertAt, "", new { @class = "text-danger" })
            </div>  
        </div>*@
        <br />
        <br />
        <br />
        <div class="modal-footer">
            <div class="col-md-2"><button type="button" class="btn btn-default pull-left" data-dismiss="modal">Cancel</button></div>
            <div class="col-md-8"></div>
            <div class="col-md-2"><button type="button" class="btn btn-primary pull-right btn-addvariant" data-dismiss="modal">Save</button></div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
