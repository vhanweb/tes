@model POS.ViewModel.PurchaseOrderViewModel


@using (Html.BeginForm("Add", "PurchaseOrder", null, FormMethod.Post, new { @id = "form-addpurchaseorder" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <form role="form" id="data-form">

            <div class="form-group">

                <div class="col-md-12">
                    <h4>Outlet</h4>
                    <hr />
                    @Html.DropDownListFor(model => model.OutletID, (IEnumerable<SelectListItem>)ViewBag.ListOutlet, new { @class = "form-control", @type = "hidden" })
                    @Html.ValidationMessageFor(model => model.OutletID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">

                <div class="col-md-12">
                    <h4>Suppliers</h4>
                    <hr />
                    @Html.DropDownListFor(model => model.SupplierID, (IEnumerable<SelectListItem>)ViewBag.ListSupplier, "No Supplier(Default)", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SupplierID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">

                <div class="col-md-12">
                    <h4>Notes</h4>
                    <hr />
                    @Html.TextAreaFor(model => model.Notes, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">

                <h4>Perchase Order</h4>
                <hr />

                <table id="tableharga" class="table table-hover table-bordered">
                    <thead>
                        <tr>
                            <th>Item</th>
                            <th>In Stok</th>
                            <th>Order</th>
                            <th>Unit Cost</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody id="list-detail-po"></tbody>
                </table>
               
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.Label("TOTAL", new { @class = "label-control pull-left col-md-10" })
                        <div class="col-md-2">
                            <button type="button" id="btn-total" class="btn btn-success btn-sm">Total</button>
                            <input id="total-3" name="Total" type="hidden" class="form-control" />
                            <p id="total-2"></p>
                        </div>
                    </div>
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-12">
                    <button type="button" class="btn btn-primary col-md-12 btn-add-po">ADD PURCHASE ORDER</button>
                </div>
            </div>

        </form>
        <div class="modal-footer">
            <div class="col-md-2 pull-right">
                <button type="submit" class="btn btn-primary btn-block">Save</button>
            </div>
            <div class="col-md-2 pull-right">
                <button type="button" class="btn btn-default btn-block" data-dismiss="modal">Cancel</button>
            </div>
        </div>
        
    </div>
}



<script type="text/javascript">
    $(document).ready(function () {
        $('#btn-total').click(function (e) {
            e.preventDefault();
            var total = 0;
            $.each($('#list-detail-po').parent().parent().find(".totalc"), function (i, v) {
                var subtotal = $(this).parent().parent().find('.totalc').val();
                total = parseInt(subtotal) + total;
            });
            $('#total-3').val(total);
            $('#total-2').text(total);
        });

        $('#list-detail-po').on('change', '.unit-cost', function (e) {
            e.preventDefault();
            var order = $(this).parent().parent().find(".orderc").val();
            var unitcost = $(this).parent().parent().find('.unit-cost').val();
            var subtotal = parseInt(order) * parseInt(unitcost);
            $(this).parent().parent().find('.totalc').val(subtotal);
        });

    });


</script>



